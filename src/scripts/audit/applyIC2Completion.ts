
import { completeIC2Item } from './completeIC2Item';
import { runAndDisplayIC2Audit } from './runIC2Audit';

export async function applyIC2Completion() {
  console.log('üöÄ Application de la compl√©tion IC-2 selon E-LiSA...');
  
  try {
    // V√©rification de l'√©tat actuel
    console.log('üîç V√©rification √©tat actuel IC-2...');
    const initialAudit = await runAndDisplayIC2Audit();
    
    if (initialAudit.completeness === 100) {
      console.log('‚úÖ IC-2 d√©j√† complet √† 100% !');
      return initialAudit;
    }
    
    // Application de la compl√©tion compl√®te
    console.log('üîß Application de la compl√©tion compl√®te IC-2...');
    const finalReport = await completeIC2Item();
    
    // V√©rification finale
    console.log('üéØ V√©rification finale...');
    const finalAudit = await runAndDisplayIC2Audit();
    
    if (finalAudit.completeness === 100) {
      console.log('üéâ IC-2 PARFAITEMENT COMPL√âT√â !');
      console.log('‚úÖ 7 connaissances Rang A selon E-LiSA');
      console.log('‚úÖ 2 connaissances Rang B selon E-LiSA');
      console.log('‚úÖ Paroles musicales compl√®tes');
      console.log('‚úÖ Quiz avec 5 questions');
      console.log('‚úÖ Structure bande dessin√©e');
      console.log('‚úÖ Audit conformit√© E-LiSA : 100%');
    } else {
      console.log(`‚ö†Ô∏è Compl√©tude finale: ${finalAudit.completeness}%`);
    }
    
    return finalAudit;
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'application IC-2:', error);
    throw error;
  }
}

// Ex√©cution imm√©diate
applyIC2Completion().then(result => {
  console.log('üéØ Application IC-2 termin√©e avec succ√®s !');
}).catch(error => {
  console.error('‚ùå √âchec de l\'application IC-2:', error);
});
